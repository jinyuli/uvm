name: CI/CD

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Cargo Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Build project
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace --release

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Cargo Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

  deploy_release:
    needs: [build, test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Publish release
        run: |
          cargo publish --package uvm
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  attach_binaries:
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            tool: cargo
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            tool: cargo
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            tool: cross
          - target: aarch64-unknown-linux-musl
            os: ubuntu-latest
            tool: cross
          - target: x86_64-apple-darwin
            os: macos-latest
            tool: cargo
          - target: aarch64-apple-darwin
            os: macos-latest
            tool: cross
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            tool: cargo
          - target: aarch64-pc-windows-msvc
            os: windows-latest
            tool: cross
    needs: [build, test]
    runs-on: ${{ matrix.os }}
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --workspace --release --locked --target=${{ matrix.target }}
      - name: Upload binary
        if: matrix.os != 'windows-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/uvm
          asset_name: uvm-${{ matrix.target }}
          tag: ${{ github.ref }}
      - name: Upload windows binary
        if: matrix.os == 'windows-latest'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/uvm.exe
          asset_name: uvm-${{ matrix.target }}.exe
          tag: ${{ github.ref }}
